---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrev from "@components/BackToPrev.astro";
import { dateRange } from "@lib/utils";

export async function getStaticPaths() {
  const activities = (await getCollection("activities"))
  .filter((activity) => !activity.data.draft)
    .sort((a, b) => b.data.dateStart.valueOf() - a.data.dateStart.valueOf());
  return activities.map((activity) => ({
    params: { slug: activity.slug },
    props: activity,
  }));
}
type Props = CollectionEntry<"activities">;

const activity = Astro.props;
const { Content } = await activity.render();
---

<PageLayout title={activity.data.title} description={activity.data.description}>

  <Container>
    <div class="animate">
      <BackToPrev href="/activities"> Back to activities </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          {dateRange(activity.data.dateStart, activity.data.dateEnd)}
        </div>
        <!-- &bull;
        <div class="font-base text-sm">
          {readingTime(activity.body)}
        </div> -->
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {activity.data.title}
      </div>
      <!-- {
        (activity.data.demoURL || activity.data.repoURL) && (
          <nav class="animate flex gap-1">
            {activity.data.demoURL && (
              <Link href={activity.data.demoURL} external>
                url
              </Link>
            )}
            {activity.data.demoURL && activity.data.repoURL && <span>/</span>}
            {activity.data.repoURL && (
              <Link href={activity.data.repoURL} external>
                repo
              </Link>
            )}
          </nav>
        )
      } -->
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
